# -*- coding: utf-8 -*-
"""breast_cancer_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uCiUaPz_-oGLq0nNBUhymhknma79Dzyy

#***BREAST CANCER PREDICTION***

---
#**Table of Contents**
---

**1.** [**Introduction**](#Section1)<br>
**2.** [**Problem Statement**](#Section2)<br>
**3.** [**Importing Libraries**](#Section3)<br>
**4.** [**Data Acquisition & Description**](#Section4)<br>
   
   - **4.1** [**Data Description**](#Section41)
   - **4.2** [**Data Information**](#Section42)

**5.** [**Data Pre-processing**](#Section5)<br>
**6.** [**Exploratory Data Analysis**](#Section6)<br>
**7.** [**Data Preparation**](#Section7)<br>
**8.** [**Model Development & Evaluation**](#Section8)<br>

---
<a name = Section1></a>
#**1. Introduction**
---

- **Breast cancer (BC)** is one of the most common cancers among women worldwide, representing the majority of new cancer cases and cancer-related deaths according to global statistics, making it a **significant public health problem** in today’s society.

- **The early diagnosis of BC can improve the prognosis and chance of survival significantly**, as it can promote timely clinical treatment to patients. Further accurate classification of benign tumors can prevent patients undergoing unnecessary treatments. Thus, the correct diagnosis of BC and classification of patients into malignant or benign groups is the subject of much research. Because of its unique advantages in critical features detection from complex BC datasets, machine learning (ML) is widely recognized as the methodology of choice in BC pattern classification and forecast modelling.


- **Recommended Screening Guidelines:**
Mammography. The most important screening test for breast cancer is the mammogram. A mammogram is an X-ray of the breast. It can detect breast cancer up to two years before the tumor can be felt by you or your doctor.
  - Women age 40–45 or older who are at average risk of breast cancer should have a mammogram once a year.
  - Women at high risk should have yearly mammograms along with an MRI starting at age 30.


- **Some Risk Factors for Breast Cancer**
The following are some of the known risk factors for breast cancer. However, most cases of breast cancer cannot be linked to a specific cause. Talk to your doctor about your specific risk.
  - **Age**. The chance of getting breast cancer increases as women age. Nearly 80 percent of breast cancers are found in women over the age of 50.
  - **Personal history of breast cancer**. A woman who has had breast cancer in one breast is at an increased risk of developing cancer in her other breast.
  - **Family history of breast cancer**. A woman has a higher risk of breast cancer if her mother, sister or daughter had breast cancer, especially at a young age (before 40). Having other relatives with breast cancer may also raise the risk.
  - **Genetic factors**. Women with certain genetic mutations, including changes to the BRCA1 and BRCA2 genes, are at higher risk of developing breast cancer during their lifetime. Other gene changes may raise breast cancer risk as well.
  - **Childbearing and menstrual history**. The older a woman is when she has her first child, the greater her risk of breast cancer. Also at higher risk are:
    - Women who menstruate for the first time at an early age (before 12)
    - Women who go through menopause late (after age 55)
    - Women who’ve never had children

---
<a name = Section2></a>
#**2. Problem Statement**
---

- In women, Breast cancer (BC) is one of the most common cancers and knowing the chances of getting suffered from it in future is not a simple task.
- So i m predicting the chances of Breast Cancer for a wemen using Machine Learning Algorithms having high accuracy.

---
<a name = Section3></a>
# **3. Installing & Importing Libraries**
---
"""

import pandas as pd
import numpy as np
import pickle
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler
from sklearn import metrics
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.model_selection import RandomizedSearchCV
from sklearn.ensemble import RandomForestRegressor
import seaborn as sns
import matplotlib.pyplot as plt

"""---
<a name = Section4></a>
# **4. Data Acquisition & Description**
---

"""

from google.colab import files
upload = files.upload()

df = pd.read_csv('data.csv')
df.head()

df.shape

"""<a name = Section41></a>
### **4.1 Data Description**

- In this section we will get **information about the data** and see some observations.
"""

df.describe()

"""<a name = Section42></a>
### **4.2 Data Information**

- In this section we will see the **information about the types of features**.
"""

df.info()

df.isnull().sum()
df.isna().sum()

df.dtypes

"""---
<a name = Section5></a>
# **5. Data Pre-Processing**
---
"""

df = df.drop(['id', 'Unnamed: 32'], axis=1)
df.head()

df.shape

print(df['diagnosis'].unique())

le = LabelEncoder()
df['diagnosis'] = le.fit_transform(df['diagnosis'])

df.head()

"""---
<a name = Section6></a>
# **6. Exploratory Data Analysis**
---
"""

df.corr()

#sns.pairplot(df)

# Count the target class
sns.countplot(df['diagnosis'])

# counter plot of feature radius_mean
plt.figure(figsize = (20,8))
sns.countplot(df['radius_mean'])

# heatmap of DataFrame
plt.figure(figsize=(16,9))
sns.heatmap(df)

# Heatmap of Correlation matrix of breast cancer DataFrame
plt.figure(figsize=(20,10))
sns.heatmap(df.corr(), annot = True, cmap ='coolwarm', linewidths=2)

# visualize correlation barplot
plt.figure(figsize = (16,5))
ax = sns.barplot(df.corrwith(df.diagnosis).index, df.corrwith(df.diagnosis))
ax.tick_params(labelrotation = 90)

"""---
<a name = Section7></a>
#**7. Data Prepration**
---
"""

x = df.iloc[:, 1:31]
y = df.iloc[:, 0]

x.columns

y=pd.DataFrame(y)
y

x.head()

y.head()

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)

#Feature Scaling
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

"""----
<a name = Section8></a>
# **8. Model Development & Evaluation**
----

Logistic Regression
"""

#Using Logistic Regression Algorithm to the Training Set
from sklearn.linear_model import LogisticRegression
lr_classifier = LogisticRegression(random_state = 0)
lr_classifier.fit(x_train, y_train)

y_pred = lr_classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
cm

acs = accuracy_score(y_test, y_pred)
acs*100

"""KNeighborsClassifier"""

#Using KNeighborsClassifier Method of neighbors class to use Nearest Neighbor algorithm
from sklearn.neighbors import KNeighborsClassifier
knn_classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)
knn_classifier.fit(x_train, y_train)

#confusion_matrix
y_pred = knn_classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
cm

#accuracy_score
acs = accuracy_score(y_test, y_pred)
acs*100

"""GaussianNB"""

#Using GaussianNB method of naive_bayes class to use Naive Bayes Algorithm
from sklearn.naive_bayes import GaussianNB
gnb_classifier = GaussianNB()
gnb_classifier.fit(x_train, y_train)

#confusion_matrix
y_pred = gnb_classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
cm

#accuracy_score
acs = accuracy_score(y_test, y_pred)
acs*100

"""DecisionTreeClassifier"""

#Using DecisionTreeClassifier of tree class to use Decision Tree Algorithm
from sklearn.tree import DecisionTreeClassifier
dt_classifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)
dt_classifier.fit(x_train, y_train)

#confusion_matrix
y_pred = dt_classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
cm

#accuracy_score
acs = accuracy_score(y_test, y_pred)
acs*100

"""RandomForestClassifier"""

#Using RandomForestClassifier method of ensemble class to use Random Forest Classification algorith
from sklearn.ensemble import RandomForestClassifier
rf_classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
rf_classifier.fit(x_train, y_train)

#confusion_matrix
y_pred = rf_classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
cm

#accuracy_score
acs = accuracy_score(y_test, y_pred)
acs*100

"""Save the Machine Learning model"""

file = open('breast_cancer_classification.pkl', 'wb')
pickle.dump(lr_classifier, file)